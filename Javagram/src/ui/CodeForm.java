package ui;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class CodeForm {

    private final String welcomInput = "На данный номер телефона было отправлено\n" +
            "SMS - сообщение с кодом подтверждения.\n" +
            "Пожалуйства, введите этот код в поле ниже:";

    private JPanel rootPanel;
    private JPanel pnlMain;
    private JPanel pnlLogo;
    private JPanel pnlWelcomInput;
    private JTextPane txtWelcomInput;
    private JPanel pnlCode;
    private JPanel pnlNext;
    private JButton btnNext;
    private JPasswordField txtCode;
    private JPanel pnlPhoneNumbet;
    private JLabel lblPhoneNumber;

    private ChangePanel changePanel;

    public CodeForm() {
        pnlMain.setLayout(new BoxLayout(pnlMain, BoxLayout.Y_AXIS));
        btnNext.setBackground(new Color(21, 61, 242));
        txtWelcomInput.setText(welcomInput);
        btnNext.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (changePanel != null) {
                    changePanel.next(txtCode.getPassword().toString());
                }
            }
        });
    }

    public void setPhoneNumber(String number) {
        lblPhoneNumber.setText(number);
    }

    public JPanel getRootPanel() {
        return rootPanel;
    }

    public void setChangePanel(ChangePanel changePanel) {
        this.changePanel = changePanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new BorderLayout(0, 0));
        pnlMain = new JPanel();
        pnlMain.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        rootPanel.add(pnlMain, BorderLayout.CENTER);
        pnlLogo = new JPanel();
        pnlLogo.setLayout(new BorderLayout(0, 0));
        pnlLogo.setMaximumSize(new Dimension(75, 75));
        pnlLogo.setMinimumSize(new Dimension(75, 75));
        pnlLogo.setPreferredSize(new Dimension(75, 75));
        pnlMain.add(pnlLogo);
        final JLabel label1 = new JLabel();
        label1.setHorizontalAlignment(0);
        label1.setText("LOGOTIP");
        label1.setVerifyInputWhenFocusTarget(false);
        pnlLogo.add(label1, BorderLayout.CENTER);
        pnlPhoneNumbet = new JPanel();
        pnlPhoneNumbet.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        pnlPhoneNumbet.setMaximumSize(new Dimension(200, 40));
        pnlPhoneNumbet.setMinimumSize(new Dimension(200, 40));
        pnlPhoneNumbet.setPreferredSize(new Dimension(200, 40));
        pnlMain.add(pnlPhoneNumbet);
        lblPhoneNumber = new JLabel();
        Font lblPhoneNumberFont = this.$$$getFont$$$("Noto Sans Buginese", Font.PLAIN, 20, lblPhoneNumber.getFont());
        if (lblPhoneNumberFont != null) lblPhoneNumber.setFont(lblPhoneNumberFont);
        lblPhoneNumber.setText("+7 900 078-59-29");
        pnlPhoneNumbet.add(lblPhoneNumber);
        pnlWelcomInput = new JPanel();
        pnlWelcomInput.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        pnlWelcomInput.setMaximumSize(new Dimension(350, 75));
        pnlWelcomInput.setMinimumSize(new Dimension(350, 75));
        pnlWelcomInput.setPreferredSize(new Dimension(350, 75));
        pnlMain.add(pnlWelcomInput);
        txtWelcomInput = new JTextPane();
        txtWelcomInput.setMaximumSize(new Dimension(350, 75));
        txtWelcomInput.setMinimumSize(new Dimension(350, 75));
        txtWelcomInput.setPreferredSize(new Dimension(350, 75));
        txtWelcomInput.setText("Введите код страны и номер мобильного телефона");
        pnlWelcomInput.add(txtWelcomInput);
        pnlCode = new JPanel();
        pnlCode.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        pnlCode.setMaximumSize(new Dimension(200, 40));
        pnlCode.setMinimumSize(new Dimension(150, 40));
        pnlCode.setPreferredSize(new Dimension(150, 40));
        pnlMain.add(pnlCode);
        txtCode = new JPasswordField();
        txtCode.setMaximumSize(new Dimension(150, 150));
        txtCode.setMinimumSize(new Dimension(150, 30));
        txtCode.setPreferredSize(new Dimension(150, 30));
        pnlCode.add(txtCode);
        pnlNext = new JPanel();
        pnlNext.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 20));
        pnlNext.setMaximumSize(new Dimension(150, 60));
        pnlNext.setMinimumSize(new Dimension(150, 60));
        pnlNext.setPreferredSize(new Dimension(150, 60));
        pnlNext.putClientProperty("html.disable", Boolean.FALSE);
        pnlMain.add(pnlNext);
        btnNext = new JButton();
        btnNext.setForeground(new Color(-2363905));
        btnNext.setText("ПРОДОЛЖИТЬ");
        pnlNext.add(btnNext);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }
}
